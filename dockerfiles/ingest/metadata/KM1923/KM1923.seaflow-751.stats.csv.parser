#!/usr/bin/env python3
import click
import os
import pendulum
import sys


@click.command()
@click.argument('infile', type=click.Path(exists=True), nargs=1)
@click.argument('outfile', type=click.Path(), nargs=1)
def main(infile, outfile):
    header = [
        'time', 'lat', 'lon', 'temp', 'salinity', 'par',
        'stream_pressure', 'file_duration', 'event_rate', 'opp_evt_ratio',
        'pop', 'n_count', 'chl_med', 'pe_med', 'fsc_med', 'diam_mid_med',
        'Qc_mid_med', 'quantile', 'flag', 'flow_rate'
    ]

    with open(infile, mode='r', encoding='utf-8') as fin:
        with open(outfile, mode='w', encoding='utf-8') as fout:
            fout.write(','.join(header) + '\n')
            header_seen = False
            for line in fin:
                if not header_seen:
                    header_seen = True
                    continue
                try:
                    outputs = parse_line(line)
                except Exception as e:
                    print(os.linesep.join(["Error with line:", line.rstrip(), str(e), '']), file=sys.stderr)
                else:
                    if outputs:
                        fout.write(','.join(outputs) + '\n')


def parse_line(line):
    fields = line.rstrip().split(',')
    if len(fields) != 20:
        raise Exception('Incorrect column number found')
    # Only take 50% quantile
    if int(float(fields[17])) != 50:
        return None
    date = pendulum.parse(fields[0])
    # Skip first column of file
    # fields[10] is a text field 'pop'
    # 'NA' is a valid null value, so don't try to cast in that case
    # ignore pop text column 8
    _ = [float(x) for x in fields[1:10] + fields[11:] if x != 'NA']

    return [date.isoformat()] + fields[1:]


if __name__ == '__main__':
    main()
