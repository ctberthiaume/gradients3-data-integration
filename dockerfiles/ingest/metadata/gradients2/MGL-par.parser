#!/usr/bin/env python3
import click
import os
import pendulum
import sys


@click.command()
@click.argument('infile', type=click.Path(exists=True), nargs=1)
@click.argument('outfile', type=click.Path(), nargs=1)
def main(infile, outfile):
    header = ['time', 'par', 'temp', 'salinity']

    with open(infile, mode='r', encoding='utf-8') as fin:
        with open(outfile, mode='w', encoding='utf-8') as fout:
            fout.write(','.join(header) + '\n')
            for line in fin:
                try:
                    outputs = parse_par(line)
                except Exception as e:
                    print(os.linesep.join(['Error with line:', line.rstrip(), str(e), '']), file=sys.stderr)
                else:
                    if outputs:
                        fout.write(','.join(outputs) + '\n')


def parse_par(line):
    cols = line.rstrip().split('\t')
    time = parse_time(cols[1])
    par, temp, sal = [s.strip() for s in cols[-1].split(',')]
    # Are these floats?
    _, _, _ = float(par), float(temp), float(sal)
    return [time.isoformat(), par, temp, sal]


def parse_time(t):
    y, doy, h, m, s = t.split(':')
    second = int(float(s))
    microsecond = int((float(s) - second) * 1000000)
    dt = pendulum.datetime(int(y), 1, 1, hour=int(h), minute=int(m), second=second, microsecond=microsecond)
    dt = dt.add(days=int(doy)-1)
    return dt


if __name__ == '__main__':
    main()
