#!/usr/bin/env python3
import click
import os
import pendulum
import sys


@click.command()
@click.argument('infile', type=click.Path(exists=True), nargs=1)
@click.argument('outfile', type=click.Path(), nargs=1)
def main(infile, outfile):
    header = ['time', 'par']

    with open(infile, mode='r', encoding='utf-8') as fin:
        with open(outfile, mode='w', encoding='utf-8') as fout:
            fout.write(','.join(header) + '\n')
            # Data file is about every 1 second read every 20 lines
            # to sample 3 times a minute
            for line in subsample(fin, 20):
                try:
                    outputs = parse_par(line)
                except Exception as e:
                    print(os.linesep.join(['Error with line:', line.rstrip(), str(e), '']), file=sys.stderr)
                else:
                    if outputs:
                        fout.write(','.join(outputs) + '\n')

def subsample(lines, n):
    """subsample every n line from lines"""
    i = 0
    for line in lines:
        if i % n == 0:
            yield line
        i += 1

def parse_par(line):
    cols = line.rstrip().split('\t')
    if len(cols) != 3:
        raise Exception('Incorrect column number found')
    data = cols[-1].split(',')
    if len(data) != 3:
        raise Exception('Incorrect data column number found')
    time = parse_time(cols[1])
    par = data[0].strip()
    _ = float(par)
    return [time.isoformat(), par]


def parse_time(t):
    y, doy, h, m, s = t.split(':')
    second = int(float(s))
    microsecond = int((float(s) - second) * 1000000)
    dt = pendulum.datetime(int(y), 1, 1, hour=int(h), minute=int(m), second=second, microsecond=microsecond)
    dt = dt.add(days=int(doy)-1)
    return dt


if __name__ == '__main__':
    main()
