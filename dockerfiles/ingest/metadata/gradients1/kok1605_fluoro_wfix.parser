#!/usr/bin/env python3
import click
import os
import pendulum
import sys


@click.command()
@click.argument('infile', type=click.Path(exists=True), nargs=1)
@click.argument('outfile', type=click.Path(), nargs=1)
def main(infile, outfile):
    header = ['time', 'chl_fluor']

    with open(infile, mode='r', encoding='utf-8') as fin:
        with open(outfile, mode='w', encoding='utf-8') as fout:
            fout.write(','.join(header) + '\n')
            header_seen = False
            # Data file is about every 5 second read every 4 lines
            # to sample 3 times a minute
            for line in subsample(fin, 4):
                if not header_seen:
                    header_seen = True
                    continue
                try:
                    outputs = parse_line(line)
                except Exception as e:
                    print(os.linesep.join(["Error with line:", line.rstrip(), str(e), '']), file=sys.stderr)
                else:
                    if outputs:
                        fout.write(','.join(outputs) + '\n')


def subsample(lines, n):
    """subsample every n line from lines"""
    i = 0
    for line in lines:
        if i % n == 0:
            yield line
        i += 1


def parse_line(line):
    fields = line.rstrip().split()
    if len(fields) != 11:
        raise Exception('Incorrect column number found')
    date = parse_time(*fields[:6])
    _ = float(fields[-2])
    return [date.isoformat(), fields[-2]]


def parse_time(y, doy, h, m, s, ms):
    second = int(s)
    microsecond = int(ms) * 1000
    dt = pendulum.datetime(int(y), 1, 1, hour=int(h), minute=int(m), second=second, microsecond=microsecond)
    dt = dt.add(days=int(doy)-1)
    return dt


if __name__ == '__main__':
    main()
