version: "3.7"
services:
  grafana:
    image: grafana/grafana:6.0.0
    deploy:
      restart_policy:
        condition: any
        delay: 5s
        window: 60s
    environment:
      GF_SERVER_ENABLE_GZIP: 'true'
      GF_SECURITY_ADMIN_PASSWORD__FILE: /run/secrets/grafana_admin_password
      GF_USERS_ALLOW_SIGN_UP: 'true'
      GF_USERS_VIEWERS_CAN_EDIT: 'true'
      GF_AUTH_ANONYMOUS_ENABLED: 'true'
      GF_AUTH_ANONYMOUS_ORG_NAME: Main Org.
      GF_AUTH_ANONYMOUS_ORG_ROLE: Viewer
      GF_ANALYTICS_REPORTING_ENABLED: 'false'
      GF_ANALYTICS_CHECK_FOR_UPDATES: 'false'
      ROUSER: ocean  # read-only user name for postgres
      ROPASSWORD__FILE: /run/secrets/postgres_ro_password  # postgres read-only user password
    networks:
      - backend
    ports:
      - "3000:3000"
    secrets:
      - grafana_admin_password
      - postgres_ro_password
    volumes:
      - grafana-storage:/var/lib/grafana
      - grafana-config:/etc/grafana
      - ./dockerfiles/grafana/:/app
  timescaledb:
    # use pg10, latest supported by grafana timescaledb plugin
    image: timescale/timescaledb:1.2.2-pg10
    deploy:
      restart_policy:
        condition: any
        delay: 5s
        window: 60s
    environment:
      POSTGRES_PASSWORD_FILE: /run/secrets/postgres_postgres_password
      TIMESCALEDB_TELEMETRY: 'off'
    networks:
      - backend
    ports:
      - "5432:5432"
    secrets:
      - postgres_postgres_password
    volumes:
      - timescaledb-storage:/var/lib/postgresql/data
      - ./dockerfiles/timescaledb/:/app
  minio:
      image: minio/minio:RELEASE.2019-03-20T22-38-47Z
      command: server /data
      deploy:
        restart_policy:
          condition: any
          delay: 5s
          window: 60s
      environment:
        MINIO_ACCESS_KEY_FILE: minio_access_key
        MINIO_SECRET_KEY_FILE: minio_secret_key
      networks:
        - backend
      ports:
        - "9000:9000"
      secrets:
        - minio_access_key
        - minio_secret_key
      volumes:
        - minio-storage:/data
  ingest:
    image: ctberthiaume/ingest:gradients3
    deploy:
      restart_policy:
        condition: any
        delay: 5s
        window: 60s
    environment:
      CURRENT_CRUISE: hot_2019_06_30  # current cruise name, subfolder of metadata, should be in DBNAMES_FILE
      PGHOST: timescaledb
      PGUSER: postgres  # admin user name
      ROUSER: ocean  # read-only user name
      PGPASSWORD_FILE: /run/secrets/postgres_postgres_password  # postgres admin password
      ROPASSWORD_FILE: /run/secrets/postgres_ro_password  # postgres read-only user password
      MINIO_ACCESS_KEY_FILE: /run/secrets/minio_access_key  # minio admin access key
      MINIO_SECRET_KEY_FILE: /run/secrets/minio_secret_key  # minio admin secret key
      MINIO_ENDPOINT: minio:9000
      MINIO_INPUT_BUCKET: input-data  # bucket for unparsed input data files
      MINIO_PARSED_BUCKET: parsed-data  # bucket for parsed data files
      MINIO_MISC_BUCKET: other-data  # bucket for data to keep but not parse
      MINIO_BINNED_BUCKET: binned-data  # bucket for time-binned data to be sent to shore
      DBNAMES_FILE: /app/dbnames.txt  # file with cruise DBNAMES array
      METADATA_DIR: /app/metadata  # don't change unless changing source dir layout
      OUTPUT_DIR: /mnt/outputs  # don't change unless changing downstream-storage mount point
      DEBUG: 0  # set verbosity of parse and ingest python scripts
    networks:
      - backend
    secrets:
      - postgres_postgres_password
      - postgres_ro_password
      - minio_access_key
      - minio_secret_key
    volumes:
      - downstream-storage:/mnt/outputs
      - ./dockerfiles/ingest/:/app/
      - grafana-storage:/var/lib/grafana
      - grafana-config:/etc/grafana
  backup:
    image: ctberthiaume/backup:gradients3
    deploy:
      restart_policy:
        condition: any
        delay: 5s
        window: 60s
    environment:
      MINIO_ACCESS_KEY_FILE: /run/secrets/minio_access_key  # minio admin access key
      MINIO_SECRET_KEY_FILE: /run/secrets/minio_secret_key  # minio admin secret key
      MINIO_ENDPOINT: minio:9000
      FILECACHE_DIR: /backup/minio_cache
      BORG_PASSPHRASE_FILE: /run/secrets/borg_passphrase
      BORG_REPO: /backup/minio_borg_repo
      GRAFANADB: /var/lib/grafana/grafana.db
    networks:
      - backend
    secrets:
      - borg_passphrase
      - minio_access_key
      - minio_secret_key
    volumes:
      - ./dockerfiles/backup/:/app
      - backup-storage:/backup
      - grafana-storage:/var/lib/grafana

volumes:
  grafana-storage:
    external: true
  grafana-config:
    external: true
  timescaledb-storage:
    external: true
  downstream-storage:
    external: true
  minio-storage:
    external: true
  backup-storage:
    external: true

networks:
  backend:
    driver: overlay
    attachable: true

secrets:
  grafana_admin_password:
    file: ./secrets/grafana_admin_password.txt
  postgres_postgres_password:
    file: ./secrets/postgres_postgres_password.txt
  postgres_ro_password:
    file: ./secrets/postgres_ro_password.txt
  minio_access_key:
    file: ./secrets/minio_access_key.txt
  minio_secret_key:
    file: ./secrets/minio_secret_key.txt
  borg_passphrase:
    file: ./secrets/borg_passphrase.txt
